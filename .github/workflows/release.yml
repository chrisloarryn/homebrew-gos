name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Run tests
        run: |
          go mod tidy
          go test -v ./...

      - name: Login to Docker Hub
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/setup-buildx-action@v3

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          # Uncomment if you want to push Docker images
          # DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          # DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  # Job to test the built binaries
  test-binaries:
    needs: goreleaser
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download binary (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          curl -sSL "https://github.com/${{ github.repository }}/releases/download/${TAG}/gos_Linux_x86_64.tar.gz" | tar -xz
          chmod +x gos
          ./gos --help

      - name: Download binary (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          curl -sSL "https://github.com/${{ github.repository }}/releases/download/${TAG}/gos_Darwin_x86_64.tar.gz" | tar -xz
          chmod +x gos
          ./gos --help

      - name: Download binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $TAG = $env:GITHUB_REF -replace 'refs/tags/', ''
          Invoke-WebRequest -Uri "https://github.com/${{ github.repository }}/releases/download/$TAG/gos_Windows_x86_64.zip" -OutFile "gos.zip"
          Expand-Archive -Path "gos.zip" -DestinationPath "."
          .\gos.exe --help
